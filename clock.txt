                      clock using React

index.html
______________________________________
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <div id="root"></div>
</body>
</html>

________________________________________________________________
app.js

import React, { Component } from 'react';
import Clock from './clock';
import './App.css';
class App extends Component {
render() {
return (
<div className="App">
<div className="clock">
<Clock />
</div>

</div>
);
}
}
export default App;

_______________________________________________________________
index.css

import React, { Component } from 'react';
import Clock from './clock';
import './App.css';
class App extends Component {
render() {
return (
<div className="App">
<div className="clock">
<Clock />
</div>

</div>
);
}
}
export default App;

__________________________________________________________________
app.css

.App {
  text-align: center;
  }
  .clock {
  background-color: #282c34;
  min-height: 100vh;
  align-items: center;
  justify-content: center;
  }

______________________________________________________
clock.js

import React, { Component } from 'react';
class Clock extends Component {
constructor(props){
super(props);
//This declared the state of time at the very beginning
this.state ={
time: new Date().toLocaleTimeString()
}
}

//This happens when the component mount and the setInterval function get called with a call back function updateClock()
componentDidMount() {
this.intervalID = setInterval(() =>
this.updateClock(),
1000
);}

//This section clears setInterval by calling intervalID so as to optimise memory
componentWillUnmount(){
clearInterval(this.intervalID)
}

//This function set the state of the time to a new time
updateClock(){
this.setState({
time: new Date().toLocaleTimeString()
});
}
render() {
return (
<div className="Time">
     <p> {this.state.time}</p>
</div>
);}
}
export default Clock;

______________________________________________________________
clock.css

.Time {
    height: 500px;
    width: 800px;
    margin: auto;
    position: absolute;
    top: 0; left: 0; bottom: 0; right: 0;
    padding-top: 70px;
    font-family: courier, monospace;
    color: white;
    font-size: 110px;
    }
____________________________________________________________
index.js

import React, { Component } from "react";
class Clock extends Component {
  constructor(props) {
    super(props);
    //This declared the state of time at the very beginning
    this.state = {
      time: new Date().toLocaleTimeString(),
    };
    console.log("constructor");
  }

  //This happens when the component mount and the setInterval function get called with a call back function updateClock()
  componentDidMount() {
     console.log("componentDidMount");
    this.intervalID = setInterval(() => this.updateClock(), 1000);
  }

  //This section clears setInterval by calling intervalID so as to optimise memory
  componentWillUnmount() {
     console.log("componentwollUnmount");
    clearInterval(this.intervalID);
  }

  //This function set the state of the time to a new time
  updateClock() {
     console.log("updateClock ");
    this.setState({
      time: new Date().toLocaleTimeString(),
    });
  }
  render() {
     console.log("render ");
    return (
      <div className="Time">
        <p> {this.state.time}</p>
      </div>
    );
  }
}
export default Clock;
